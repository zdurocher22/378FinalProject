---
title: "Model"
format:
  html:
    code-fold: true
---

```{python}
import duckdb
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

## Get Data

```{python}
con = duckdb.connect('my-db.duckdb')
df = penguins.load_penguins()
con.register('df',df)
# con.execute('CREATE TABLE penguins AS SELECT * FROM df')  # this creates the penguins table, but it's already there
con.close()
```

```{python}
df = penguins.load_penguins().dropna()

df.head(3)
```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

## turn our model into a Vetiver model and save it to /data/model
```{python}
import vetiver
from vetiver import vetiver_pin_write
from vetiver import VetiverAPI
from vetiver import prepare_docker
import pins

```

```{python}
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```


```{python}
b = pins.board_folder('data/model/', allow_pickle_read=True)
vetiver_pin_write(b,v)
```

## Generate a {fastAPI} model

```{python}
import os
app = VetiverAPI(v,check_prototype = True)

#app.run(port = 8080)

vetiver.prepare_docker(b, "penguin_model")
```

# run this to open a python virtual environment: .venv\Scripts\activate

```{python}
```


